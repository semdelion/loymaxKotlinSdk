/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package loymax.sdk.models


import com.squareup.moshi.Json

/**
 * Тип операции.
 *
 * Values: PAYMENT_OPERATION,DEPOSIT_OPERATION,CASHBACK_OPERATION,REFUND_CASHBACK_OPERATION,REFUND_PAYMENT_OPERATION,CHARGING_OPERATION,DIRECT_DISCOUNT_OPERATION,WITHDRAW_OPERATION,GIFT_CARD_PAYMENT_OPERATION,REFUND_GIFT_CARD_PAYMENT_OPERATION,GIFT_CERTIFICATE_PAYMENT_OPERATION,REFUND_GIFT_CERTIFICATE_PAYMENT_OPERATION
 */

enum class OperationsType(val value: kotlin.String) {

    @Json(name = "PaymentOperation")
    PAYMENT_OPERATION("PaymentOperation"),

    @Json(name = "DepositOperation")
    DEPOSIT_OPERATION("DepositOperation"),

    @Json(name = "CashbackOperation")
    CASHBACK_OPERATION("CashbackOperation"),

    @Json(name = "RefundCashbackOperation")
    REFUND_CASHBACK_OPERATION("RefundCashbackOperation"),

    @Json(name = "RefundPaymentOperation")
    REFUND_PAYMENT_OPERATION("RefundPaymentOperation"),

    @Json(name = "ChargingOperation")
    CHARGING_OPERATION("ChargingOperation"),

    @Json(name = "DirectDiscountOperation")
    DIRECT_DISCOUNT_OPERATION("DirectDiscountOperation"),

    @Json(name = "WithdrawOperation")
    WITHDRAW_OPERATION("WithdrawOperation"),

    @Json(name = "GiftCardPaymentOperation")
    GIFT_CARD_PAYMENT_OPERATION("GiftCardPaymentOperation"),

    @Json(name = "RefundGiftCardPaymentOperation")
    REFUND_GIFT_CARD_PAYMENT_OPERATION("RefundGiftCardPaymentOperation"),

    @Json(name = "GiftCertificatePaymentOperation")
    GIFT_CERTIFICATE_PAYMENT_OPERATION("GiftCertificatePaymentOperation"),

    @Json(name = "RefundGiftCertificatePaymentOperation")
    REFUND_GIFT_CERTIFICATE_PAYMENT_OPERATION("RefundGiftCertificatePaymentOperation");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is OperationsType) "$data" else null

        /**
         * Returns a valid [OperationsType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): OperationsType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

