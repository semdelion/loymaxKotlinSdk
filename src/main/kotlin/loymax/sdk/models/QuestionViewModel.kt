/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package loymax.sdk.models

import loymax.sdk.models.AnswerHandlerViewModel
import loymax.sdk.models.QuestionType

import com.squareup.moshi.Json

/**
 * Модель вопроса анкеты.
 *
 * @param id Идентификатор.
 * @param collectionId Уникальный Id в рамках коллекции.
 * @param name Наименование.
 * @param order Порядок.
 * @param isDeleted Удален.
 * @param isQuestion Это вопрос.
 * @param logicalName Логическое имя вопроса.
 * @param questionGroupId Внутренний идентификатор группы вопросов.
 * @param questionType 
 * @param regexp Регулярное выражение.
 * @param regexpErrorMessage Текст сообщения об ошибке, получаемого при неудачной валидации через регулярное выражение.
 * @param changePeriod Период времени в днях, в течение которого редактирование ответа на вопрос недоступно.
 * @param isRequired Обязательность ответа на вопрос (true — да, false — нет).
 * @param isVisible Отображение вопроса в анкете (true — да, false — нет).
 * @param isMultiSelect Возможность выбора строкового значения из нескольких (true — да, false — нет).
 * @param answerHandlers Обработчики ответа.
 * @param isVisibleInRegistration Отображение вопроса в анкете при регистрации (true — да, false — нет).
 * @param historyIsRecorded Запись в истории (true — включена, false — выключена).
 */

data class QuestionViewModel (

    /* Идентификатор. */
    @Json(name = "id")
    var id: kotlin.Int? = null,

    /* Уникальный Id в рамках коллекции. */
    @Json(name = "collectionId")
    var collectionId: kotlin.Int? = null,

    /* Наименование. */
    @Json(name = "name")
    var name: kotlin.String? = null,

    /* Порядок. */
    @Json(name = "order")
    var order: kotlin.Int? = null,

    /* Удален. */
    @Json(name = "isDeleted")
    var isDeleted: kotlin.Boolean? = null,

    /* Это вопрос. */
    @Json(name = "isQuestion")
    var isQuestion: kotlin.Boolean? = null,

    /* Логическое имя вопроса. */
    @Json(name = "logicalName")
    var logicalName: kotlin.String? = null,

    /* Внутренний идентификатор группы вопросов. */
    @Json(name = "questionGroupId")
    var questionGroupId: kotlin.Int? = null,

    @Json(name = "questionType")
    var questionType: QuestionType? = null,

    /* Регулярное выражение. */
    @Json(name = "regexp")
    var regexp: kotlin.String? = null,

    /* Текст сообщения об ошибке, получаемого при неудачной валидации через регулярное выражение. */
    @Json(name = "regexpErrorMessage")
    var regexpErrorMessage: kotlin.String? = null,

    /* Период времени в днях, в течение которого редактирование ответа на вопрос недоступно. */
    @Json(name = "changePeriod")
    var changePeriod: kotlin.Int? = null,

    /* Обязательность ответа на вопрос (true — да, false — нет). */
    @Json(name = "isRequired")
    var isRequired: kotlin.Boolean? = null,

    /* Отображение вопроса в анкете (true — да, false — нет). */
    @Json(name = "isVisible")
    var isVisible: kotlin.Boolean? = null,

    /* Возможность выбора строкового значения из нескольких (true — да, false — нет). */
    @Json(name = "isMultiSelect")
    var isMultiSelect: kotlin.Boolean? = null,

    /* Обработчики ответа. */
    @Json(name = "answerHandlers")
    var answerHandlers: kotlin.collections.MutableList<AnswerHandlerViewModel>? = null,

    /* Отображение вопроса в анкете при регистрации (true — да, false — нет). */
    @Json(name = "isVisibleInRegistration")
    var isVisibleInRegistration: kotlin.Boolean? = null,

    /* Запись в истории (true — включена, false — выключена). */
    @Json(name = "historyIsRecorded")
    var historyIsRecorded: kotlin.Boolean? = null

)

