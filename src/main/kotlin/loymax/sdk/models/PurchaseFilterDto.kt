/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package loymax.sdk.models

import loymax.sdk.models.ComparisonOperator
import loymax.sdk.models.FilterPurchaseGroupType
import loymax.sdk.models.PurchaseFilterChequeSum
import loymax.sdk.models.PurchaseFilterDate
import loymax.sdk.models.PurchaseFilterDateInterval
import loymax.sdk.models.PurchaseFilterDaysOfWeek
import loymax.sdk.models.PurchaseFilterMerchants
import loymax.sdk.models.PurchaseFilterTime

import com.squareup.moshi.Json

/**
 * Фильтр \"Покупки\".
 *
 * @param name Имя фильтра.
 * @param processParameters Параметры обработки.
 * @param goodsGroups Группы товаров.
 * @param personalOfferAttributeLogicalName Логическое имя атрибута \"Персональное предложение\".
 * @param merchants 
 * @param date 
 * @param dateInterval 
 * @param daysOfWeek 
 * @param time 
 * @param chequeSum 
 * @param filterPositions Фильтровать позиции в соответсвии с выбранными товарами.
 * @param includeCurrentPurchase Включить текущую покупку в расчет, если она удовлетворяет условиям.
 * @param aggregationType 
 * @param `operator` 
 * @param firstValue Первое значение.
 * @param secondValue Второе значение.
 */

data class PurchaseFilterDto (

    /* Имя фильтра. */
    @Json(name = "name")
    var name: kotlin.String? = null,

    /* Параметры обработки. */
    @Json(name = "processParameters")
    var processParameters: kotlin.String? = null,

    /* Группы товаров. */
    @Json(name = "goodsGroups")
    var goodsGroups: kotlin.collections.MutableList<kotlin.Any>? = null,

    /* Логическое имя атрибута \"Персональное предложение\". */
    @Json(name = "personalOfferAttributeLogicalName")
    var personalOfferAttributeLogicalName: kotlin.String? = null,

    @Json(name = "merchants")
    var merchants: PurchaseFilterMerchants? = null,

    @Json(name = "date")
    var date: PurchaseFilterDate? = null,

    @Json(name = "dateInterval")
    var dateInterval: PurchaseFilterDateInterval? = null,

    @Json(name = "daysOfWeek")
    var daysOfWeek: PurchaseFilterDaysOfWeek? = null,

    @Json(name = "time")
    var time: PurchaseFilterTime? = null,

    @Json(name = "chequeSum")
    var chequeSum: PurchaseFilterChequeSum? = null,

    /* Фильтровать позиции в соответсвии с выбранными товарами. */
    @Json(name = "filterPositions")
    var filterPositions: kotlin.Boolean? = null,

    /* Включить текущую покупку в расчет, если она удовлетворяет условиям. */
    @Json(name = "includeCurrentPurchase")
    var includeCurrentPurchase: kotlin.Boolean? = null,

    @Json(name = "aggregationType")
    var aggregationType: FilterPurchaseGroupType? = null,

    @Json(name = "operator")
    var `operator`: ComparisonOperator? = null,

    /* Первое значение. */
    @Json(name = "firstValue")
    var firstValue: kotlin.Double? = null,

    /* Второе значение. */
    @Json(name = "secondValue")
    var secondValue: kotlin.Double? = null

)

