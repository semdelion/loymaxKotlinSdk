/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package loymax.sdk.models


import com.squareup.moshi.Json

/**
 * 
 *
 * Values: eventDateTime,sourceDateTime,person,card,partner,device,merchant,oAuthIdentifierInfo,oAuthActivityType,oAuthObjectId,oAuthGroupId,accountGroup,refundedPurchase,referral,purchase,legal,eventDay,eventMonth,eventYear,week,good,offer
 */

enum class CounterTarget(val value: kotlin.String) {

    @Json(name = "EventDateTime")
    eventDateTime("EventDateTime"),

    @Json(name = "SourceDateTime")
    sourceDateTime("SourceDateTime"),

    @Json(name = "Person")
    person("Person"),

    @Json(name = "Card")
    card("Card"),

    @Json(name = "Partner")
    partner("Partner"),

    @Json(name = "Device")
    device("Device"),

    @Json(name = "Merchant")
    merchant("Merchant"),

    @Json(name = "OAuthIdentifierInfo")
    oAuthIdentifierInfo("OAuthIdentifierInfo"),

    @Json(name = "OAuthActivityType")
    oAuthActivityType("OAuthActivityType"),

    @Json(name = "OAuthObjectId")
    oAuthObjectId("OAuthObjectId"),

    @Json(name = "OAuthGroupId")
    oAuthGroupId("OAuthGroupId"),

    @Json(name = "AccountGroup")
    accountGroup("AccountGroup"),

    @Json(name = "RefundedPurchase")
    refundedPurchase("RefundedPurchase"),

    @Json(name = "Referral")
    referral("Referral"),

    @Json(name = "Purchase")
    purchase("Purchase"),

    @Json(name = "Legal")
    legal("Legal"),

    @Json(name = "EventDay")
    eventDay("EventDay"),

    @Json(name = "EventMonth")
    eventMonth("EventMonth"),

    @Json(name = "EventYear")
    eventYear("EventYear"),

    @Json(name = "Week")
    week("Week"),

    @Json(name = "Good")
    good("Good"),

    @Json(name = "Offer")
    offer("Offer");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is CounterTarget) "$data" else null

        /**
         * Returns a valid [CounterTarget] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): CounterTarget? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

