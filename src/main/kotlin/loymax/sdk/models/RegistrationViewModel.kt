/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package loymax.sdk.models

import loymax.sdk.models.AcceptPersonalDataProcessingViewModel
import loymax.sdk.models.AcceptTenderOfferViewModel
import loymax.sdk.models.AnswerQuestionsViewModel
import loymax.sdk.models.ConfirmSubscriptionsViewModel
import loymax.sdk.models.CustomerAttributeValueViewModel
import loymax.sdk.models.CustomerStatusValueViewModel
import loymax.sdk.models.ReferrerInfo
import loymax.sdk.models.SetCardModel
import loymax.sdk.models.SetEmailViewModel
import loymax.sdk.models.SetPhoneViewModel

import com.squareup.moshi.Json

/**
 * Модель для регистрации.
 *
 * @param phone 
 * @param email 
 * @param acceptTenderOffer 
 * @param acceptPersonalDataProcessing 
 * @param questionsAnswer 
 * @param emitVirtual Признак необходимости выпуска виртуальной карты.
 * @param setCard 
 * @param subscriptionsConfirm 
 * @param registrationSourceId Источник завершения регистрации.
 * @param referrer 
 * @param commonAttributes Массив общих атрибутов и их значений, устанавливаемых Клиенту после регистрации.
 * @param statusSystemAttributes Установка статусов в разрезе статусных систем.
 * @param needToNotify Признак необходимости уведомлять клиента о событиях регистрации (установка пароля, активация карты).
 */

data class RegistrationViewModel (

    @Json(name = "phone")
    var phone: SetPhoneViewModel? = null,

    @Json(name = "email")
    var email: SetEmailViewModel? = null,

    @Json(name = "acceptTenderOffer")
    var acceptTenderOffer: AcceptTenderOfferViewModel? = null,

    @Json(name = "acceptPersonalDataProcessing")
    var acceptPersonalDataProcessing: AcceptPersonalDataProcessingViewModel? = null,

    @Json(name = "questionsAnswer")
    var questionsAnswer: AnswerQuestionsViewModel? = null,

    /* Признак необходимости выпуска виртуальной карты. */
    @Json(name = "emitVirtual")
    var emitVirtual: kotlin.Boolean? = null,

    @Json(name = "setCard")
    var setCard: SetCardModel? = null,

    @Json(name = "subscriptionsConfirm")
    var subscriptionsConfirm: ConfirmSubscriptionsViewModel? = null,

    /* Источник завершения регистрации. */
    @Json(name = "registrationSourceId")
    var registrationSourceId: kotlin.String? = null,

    @Json(name = "referrer")
    var referrer: ReferrerInfo? = null,

    /* Массив общих атрибутов и их значений, устанавливаемых Клиенту после регистрации. */
    @Json(name = "commonAttributes")
    var commonAttributes: kotlin.collections.MutableList<CustomerAttributeValueViewModel>? = null,

    /* Установка статусов в разрезе статусных систем. */
    @Json(name = "statusSystemAttributes")
    var statusSystemAttributes: kotlin.collections.MutableList<CustomerStatusValueViewModel>? = null,

    /* Признак необходимости уведомлять клиента о событиях регистрации (установка пароля, активация карты). */
    @Json(name = "needToNotify")
    var needToNotify: kotlin.Boolean? = null

)

