/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package loymax.sdk.models


import com.squareup.moshi.Json

/**
 * Тип расчёта.
 *
 * Values: DIRECT_DISCOUNT,CASHBACK_DISCOUNT,LIMIT_PAYMENT,CONFIRM_PURCHASE,CANCEL_PURCHASE,PAYMENT,PURCHASE_REFUND,BALANCE,ISSUE_CARD,PERSON_ACTIVITY,SEND_PASSWORD_TO_CHEQUE,PRE_CALCULATE_CASHBACK,GOODS_CALCULATE_DISCOUNT,GOODS_CALCULATE_CASHBACK
 */

enum class OfferCalculationType(val value: kotlin.String) {

    @Json(name = "DirectDiscount")
    DIRECT_DISCOUNT("DirectDiscount"),

    @Json(name = "CashbackDiscount")
    CASHBACK_DISCOUNT("CashbackDiscount"),

    @Json(name = "LimitPayment")
    LIMIT_PAYMENT("LimitPayment"),

    @Json(name = "ConfirmPurchase")
    CONFIRM_PURCHASE("ConfirmPurchase"),

    @Json(name = "CancelPurchase")
    CANCEL_PURCHASE("CancelPurchase"),

    @Json(name = "Payment")
    PAYMENT("Payment"),

    @Json(name = "PurchaseRefund")
    PURCHASE_REFUND("PurchaseRefund"),

    @Json(name = "Balance")
    BALANCE("Balance"),

    @Json(name = "IssueCard")
    ISSUE_CARD("IssueCard"),

    @Json(name = "PersonActivity")
    PERSON_ACTIVITY("PersonActivity"),

    @Json(name = "SendPasswordToCheque")
    SEND_PASSWORD_TO_CHEQUE("SendPasswordToCheque"),

    @Json(name = "PreCalculateCashback")
    PRE_CALCULATE_CASHBACK("PreCalculateCashback"),

    @Json(name = "GoodsCalculateDiscount")
    GOODS_CALCULATE_DISCOUNT("GoodsCalculateDiscount"),

    @Json(name = "GoodsCalculateCashback")
    GOODS_CALCULATE_CASHBACK("GoodsCalculateCashback");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is OfferCalculationType) "$data" else null

        /**
         * Returns a valid [OfferCalculationType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): OfferCalculationType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

